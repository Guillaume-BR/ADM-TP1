wine=read.csv('wine.csv')
setwd("~/ADM/ADM-TP1")
wine=read.csv('wine.csv')
#Mean and standard-deviation of the 29 quantitative variable in wine;
M = unname(colMeans(wine[4:32]))
V = unname(sapply(wine[4:32],sd)) #variance corrigée ?? facteur (21/20) ?
print(V)
print(M)
#Centering and reducing
CR=wine
for (i in 1:29)
{
CR[,3+i] <- (wine[,3+i]-M[i])/(V[i])
}
#Check if variables ar indeed recuded and centered
Barycentre=(colMeans(CR[4:32]))
print(Barycentre)
Variance=diag(var(CR[4:32]))
print(Variance)
#inertia
Inertie=sum(Variance)
print(Inertie)
"Q2"
chinon=CR[CR$Label == 'Chinon',]
saumur=CR[CR$Label == 'Saumur',]
bourgueuil=CR[CR$Label == 'Bourgueuil',]
#poids
pchi=nrow(chinon)/nrow(CR)
psau=nrow(saumur)/nrow(CR)
pbou=nrow(bourgueuil)/nrow(CR)
#barycentre
mchi= unname(colMeans(chinon[4:32]))
msau= unname(colMeans(saumur[4:32]))
mbou= unname(colMeans(bourgueuil[4:32]))
#carrée des normes euclidiennes des barycentres
nchi=sum(mchi^2)
nsau=sum(msau^2)
nbou=sum(mbou^2)
#Inertie externe
Inex=pchi*nchi+psau*nsau+pbou*nbou
#R2 pour le partionnement en appelation A CORRIGER
R=Inex/Inertie
print(100*R)
#R2 par variable
rchi=(sapply((chinon[4:32]),sd)^2)/sum(Variance)
rbou=(sapply((bourgueuil[4:32]),sd)^2)/sum(Variance)
rsau=(sapply((saumur[4:32]),sd)^2)/sum(Variance)
trichi=rchi[order(unlist(rchi))]
tribou=rbou[order(unlist(rbou))]
trisau=rsau[order(unlist(rsau))]
print(as.matrix(tribou))
print(as.matrix(trichi))
print(as.matrix(trisau))
#R2 par variable
rchi=(sapply((chinon[4:32]),sd)^2)
rbou=(sapply((bourgueuil[4:32]),sd)^2)/sum(Variance)
rsau=(sapply((saumur[4:32]),sd)^2)/sum(Variance)
trichi=rchi[order(unlist(rchi))]
print(as.matrix(trichi))
#R2 par variable
rchi=(sapply((chinon[4:32]),sd)^2)/sum(Variance)
rbou=(sapply((bourgueuil[4:32]),sd)^2)/sum(Variance)
rsau=(sapply((saumur[4:32]),sd)^2)/sum(Variance)
trichi=rchi[order(unlist(rchi))]
tribou=rbou[order(unlist(rbou))]
trisau=rsau[order(unlist(rsau))]
print(as.matrix(tribou))
print(as.matrix(trichi))
print(as.matrix(trisau))
